@page "/addsurfsession"
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<h3>Add New Surf Session</h3>

<EditForm Model="newSession" OnValidSubmit="HandleValidSubmit" class="form-horizontal">
    <DataAnnotationsValidator />
    <ValidationSummary class="alert alert-danger" />

    <div class="form-group row">
        <label for="surfSpotId" class="col-sm-2 col-form-label">Surf Spot:</label>
        <div class="col-sm-10">
            @if (surfSpots != null)
            {
                <InputSelect id="surfSpotId" @bind-Value="newSession.SurfSpotId" class="form-control">
                    <option value="">Select a Surf Spot</option>
                    @foreach (var spot in surfSpots)
                    {
                        <option value="@spot.Id">@spot.Name</option>
                    }
                </InputSelect>
            }
            else
            {
                <p><em>Loading...</em></p>
            }
        </div>
    </div>

    <div class="form-group row">
        <label for="windDegree" class="col-sm-2 col-form-label">Wind Degree:</label>
        <div class="col-sm-10">
            <InputNumber id="windDegree" @bind-Value="newSession.WindDegree" class="form-control" Min="0" Max="360" />
        </div>
    </div>

    <div class="form-group row">
        <label for="rating" class="col-sm-2 col-form-label">Rating:</label>
        <div class="col-sm-10">
            <InputSelect id="rating" @bind-Value="newSession.Rating" class="form-control">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
            </InputSelect>
        </div>
    </div>

    <div class="form-group row">
        <label for="windPower" class="col-sm-2 col-form-label">Wind Power (m/s):</label>
        <div class="col-sm-10">
            <InputNumber id="windPower" @bind-Value="newSession.WindPower" class="form-control" />
        </div>
    </div>

    <div class="form-group row">
        <label for="start" class="col-sm-2 col-form-label">Start:</label>
        <div class="col-sm-10">
            <InputDate id="start" @bind-Value="newSession.Start" class="form-control" />
        </div>
    </div>

    <div class="form-group row">
        <label for="end" class="col-sm-2 col-form-label">End:</label>
        <div class="col-sm-10">
            <InputDate id="end" @bind-Value="newSession.End" class="form-control" />
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-10 offset-sm-2">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
</EditForm>

@code {
    private SurfSession newSession = new SurfSession();
    private List<SurfSpot> surfSpots;

    protected override async Task OnInitializedAsync()
    {
        surfSpots = await Http.GetFromJsonAsync<List<SurfSpot>>("api/surfspots");
    }

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("api/surfsessions", newSession);
        Navigation.NavigateTo("/surfsessions");
    }
}
