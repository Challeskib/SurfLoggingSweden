@page "/surfspots"
@inject HttpClient Http
@inject NavigationManager Navigation

@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<h3>Surf Spot Overview</h3>

<PageTitle>Surf Spots</PageTitle>

<button class="btn btn-primary" @onclick="NavigateToAddSpot">Add New Surf Spot</button>

@if (surfSpots == null || surfSpots.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Location</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var surfSpot in surfSpots)
            {
                <tr>
                    <td>
                        @if (editIndex == surfSpots.IndexOf(surfSpot))
                        {
                            <InputText @bind-Value="surfSpot.Name" class="form-control" />
                        }
                        else
                        {
                            @surfSpot.Name
                        }
                    </td>
                    <td>
                        @if (editIndex == surfSpots.IndexOf(surfSpot))
                        {
                            <InputText @bind-Value="surfSpot.Location" class="form-control" />
                        }
                        else
                        {
                            @surfSpot.Location
                        }
                    </td>
                    <td>
                        @if (editIndex == surfSpots.IndexOf(surfSpot))
                        {
                            <button class="btn btn-success" @onclick="() => SaveEdit(surfSpot)">Save</button>
                            <button class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
                        }
                        else
                        {
                            <button class="btn btn-primary" @onclick="() => EditSpot(surfSpots.IndexOf(surfSpot))">Edit</button>
                            <button class="btn btn-danger" @onclick="() => DeleteSpot(surfSpot.Id)">Delete</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<SurfSpot> surfSpots;
    private int editIndex = -1; // Index of the spot being edited

    protected override async Task OnInitializedAsync()
    {
        surfSpots = await Http.GetFromJsonAsync<List<SurfSpot>>("api/surfspots");
    }

    private void NavigateToAddSpot()
    {
        Navigation.NavigateTo("/addsurfspot");
    }

    private void EditSpot(int index)
    {
        editIndex = index;
    }

    private void CancelEdit()
    {
        editIndex = -1;
    }

    private async Task SaveEdit(SurfSpot surfSpot)
    {
        await Http.PutAsJsonAsync($"api/surfspots/{surfSpot.Id}", surfSpot);
        editIndex = -1;
    }

    private async Task DeleteSpot(int id)
    {
        await Http.DeleteAsync($"api/surfspots/{id}");
        surfSpots = await Http.GetFromJsonAsync<List<SurfSpot>>("api/surfspots");
    }
}
